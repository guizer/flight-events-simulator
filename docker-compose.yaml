version: "3.3"
services:
  event-producer:
    build:
      context: .
      dockerfile: event-producer/Dockerfile
    entrypoint: bash -c "
        while ! curl -s rabbitmq:15672 > /dev/null; do echo waiting for rabbitmq; sleep 3; done;
        python app/main.py
      "
    environment:
      RABBITMQ_URL: "rabbitmq"
      SPEED_FACTOR: "3"
      START_DATE: "2022-06-10 15:00:00"
      END_DATE: "2022-06-10 23:00:00"
    networks:
      - default
  airport-service:
    build:
      context: .
      dockerfile: ./airport-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: bash -c "python app/init_database.py && uvicorn app.main:app --host 0.0.0.0"
    environment:
      SQLALCHEMY_DATABASE_URL: "postgresql+psycopg2://postgres:postgres@postgres/postgres"
    networks:
      - default
    ports:
      - "8000:8000"
  flight-status-service:
    build:
      context: .
      dockerfile: flight-status-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: bash -c "
        while ! curl -s rabbitmq:15672 > /dev/null; do echo waiting for rabbitmq; sleep 3; done; 
        python app/init_database.py && uvicorn app.main:app --host 0.0.0.0 --port 8001
      "
    environment:
      RABBITMQ_URL: "rabbitmq"
      STREAM_DELAY_IN_SECS: "0.1"
      SQLALCHEMY_DATABASE_URL: "postgresql+psycopg2://postgres:postgres@postgres/postgres"
    networks:
      - default
    ports:
      - "8001:8001"
  flight-service:
    build:
      context: .
      dockerfile: ./flight-service/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: bash -c "
        while !</dev/tcp/postgres/5432; do echo waiting for postgres; sleep 3; done;
        python app/init_database.py && uvicorn app.main:app --host 0.0.0.0 --port 8002
      "
    environment:
      SQLALCHEMY_DATABASE_URL: "postgresql+psycopg2://postgres:postgres@postgres/postgres"
    networks:
      - default
    ports:
      - "8002:8002"
  rabbitmq:
    image: rabbitmq:3-management
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 10
    hostname: rabbitmq
    networks:
      - default
    ports:
      - "5672:5672"
      - "15672:15672"
  postgres:
    image: postgres:14.3-bullseye
    hostname: postgres
    environment:
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default
  ui:
    build:
      context: .
      dockerfile: ui/Dockerfile
    depends_on:
      - "airport-service"
      - "flight-service"
      - "flight-status-service"
    networks:
      - default
    ports:
      - "3000:3000"

networks:
  default:
